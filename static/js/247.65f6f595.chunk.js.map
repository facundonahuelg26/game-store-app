{"version":3,"file":"static/js/247.65f6f595.chunk.js","mappings":"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","sources":["components/button/styled-components/index.js","components/button/index.js","hooks/useGetShipping.js","pages/account/styled-components/account.js","pages/account/components/UpdateInfo.js","pages/account/Account.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { css } from \"styled-components\";\r\n\r\nexport const ButtonSd = styled.button`\r\n    width:100%;\r\n    height:100%;\r\n    display:flex;\r\n    justify-content:space-evenly;\r\n    align-items:center;\r\n    background:${({mystyles}) => mystyles.background};\r\n    border-radius:7px;\r\n    border-style:none;\r\n    color: ${({mystyles}) => mystyles.color};\r\n    font-size: 15px;\r\n    font-weight:400;\r\n    z-index:100;\r\n    padding: ${({mystyles}) => mystyles.padding};\r\n    ${({to}) => to && css`\r\n        text-decoration:none;\r\n    `}\r\n`\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ButtonSd } from \"./styled-components\";\r\n\r\nconst Button = ({ children, to, myFunction = null, myType = 'button', mystyles='', disabled = false }) => {\r\n\r\n  return to ? (\r\n    <ButtonSd \r\n    as={Link} \r\n    to={to}\r\n    onClick={myFunction}\r\n    mystyles={mystyles}\r\n    >\r\n      {children}\r\n    </ButtonSd>\r\n  ) : (\r\n    <ButtonSd\r\n    onClick={myFunction}\r\n    type={myType}\r\n    mystyles={mystyles}\r\n    disabled={disabled}\r\n    >{children}</ButtonSd>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getShipping } from \"../store\";\r\n\r\nexport const useGetShipping = (userId) => {\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getShipping(userId));\r\n    }, [dispatch,userId]);\r\n\r\n}","import styled from \"styled-components\"\r\n\r\nexport const AccountContainer = styled.div`\r\n    min-height:100vh;\r\n    display:flex;\r\n    justify-content:center;\r\n    alig-items:center;\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 420px;\r\n    height:auto;\r\n    @media screen and (max-width: 600px) {\r\n        width: 320px;\r\n    }\r\n`\r\n\r\nexport const Data = styled.div`\r\n    width: 98%;\r\n    margin-top:100px;\r\n    display:flex;\r\n    flex-direction:column;\r\n    color:#92969a;\r\n    h1{\r\n        text-align:center;\r\n        color:#000000;\r\n    }\r\n\r\n    a{\r\n        padding-top:15px;\r\n        text-decoration:none;\r\n        color:#000000;\r\n        font-weight:600;\r\n    }\r\n`\r\n\r\nexport const NameAccount = styled.p`\r\n    text-transform:capitalize;\r\n`\r\n\r\nexport const UpdateData = styled.div`\r\n    margin-top: 10px;\r\n    display:flex;\r\n    justify-content: space-between;\r\n    button{\r\n        width: auto;\r\n        height: 48px;\r\n        padding:0 15px 0 15px;\r\n        background: #000000;\r\n        color: #ffffff;\r\n        border-radius:5px;\r\n    }\r\n`\r\n\r\nexport const OrderTitle = styled.div`\r\n    margin-top:35px;\r\n    \r\n    a{\r\n        text-decoration:none;\r\n        color:#61dafb;\r\n        font-weight:500;\r\n        \r\n        &:hover{\r\n            font-weight:900;\r\n        }\r\n    }\r\n\r\n    p{\r\n        \r\n        color:#92969a;\r\n    }\r\n`\r\n\r\n","import React from \"react\";\r\nimport Button from \"../../../components/button\";\r\nimport { UpdateData } from \"../styled-components\";\r\n\r\nexport const UpdateInfo = ({item, handleClick, id}) => {\r\n    \r\n  return (\r\n    <UpdateData>\r\n      <p>\r\n        {item}\r\n      </p>\r\n      <Button myFunction={() => handleClick(id)}>Actualizar</Button>\r\n    </UpdateData>\r\n  );\r\n};\r\n","import { useSelector } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useGetShipping } from \"../../hooks/useGetShipping\";\r\nimport { routes } from \"../../router\";\r\nimport { Data, NameAccount, OrderTitle, Wrapper } from \"./styled-components\";\r\nimport { AccountContainer } from \"./styled-components\";\r\nimport { UpdateInfo } from \"./components\";\r\n\r\nconst AccountPage = () => {\r\n  const { userData } = useSelector((state) => state.login);\r\n  const { shippingData } = useSelector((state) => state.shipping);\r\n  const navigate = useNavigate()\r\n  \r\n  const { name, lastname, email, userId } = userData.data;\r\n\r\n  useGetShipping(userId);\r\n\r\n  let myShipping = shippingData === null ? <p>Cargando...</p> : !shippingData.yourData ? shippingData.result : shippingData.yourData \r\n  \r\n  const myData = [\r\n    {id:1, item: `Mi dirección es ${myShipping.address}\r\n    ${myShipping.height}`},\r\n    {id:2, item: `Soy de ${myShipping.city} en prov. de \r\n    ${myShipping.state}`},\r\n    {id:3, item:`Mi teléfono es ${myShipping.areacode} \r\n    ${myShipping.phone}`}\r\n  ]\r\n\r\n  const handleClick = (id) => {\r\n    navigate(`/shipping-info/:${id}`)    \r\n  }\r\n  \r\n  return (\r\n    <AccountContainer>\r\n      <Wrapper>\r\n        <Data>\r\n          <h1>Mi cuenta</h1>\r\n          <NameAccount>\r\n            Soy {name} {lastname}\r\n          </NameAccount>\r\n          <p>Mi email es {email}</p>\r\n          {\r\n            shippingData !== null && ( shippingData.yourData\r\n            ? <>\r\n                <p>{shippingData.yourData}</p>\r\n                <Link to={routes.shipping}>Registrar datos de envio</Link>\r\n              </>\r\n            : myData.map(({item, id}) => <UpdateInfo key={id} item={item} id={id} handleClick={handleClick}/>))\r\n          }\r\n        </Data>\r\n        {\r\n          !myShipping.clientId || myShipping.clientId === '1'\r\n          ? <OrderTitle><p>No tenes pedidos realizados</p></OrderTitle>\r\n          : <OrderTitle><Link to={routes.orders}>Tus pedidos realizados</Link></OrderTitle>\r\n        }\r\n      </Wrapper>\r\n    </AccountContainer>\r\n  );\r\n};\r\n\r\nexport default AccountPage;\r\n"],"names":["ButtonSd","styled","mystyles","background","color","padding","to","css","children","myFunction","myType","disabled","as","Link","onClick","type","useGetShipping","userId","dispatch","useDispatch","useEffect","getShipping","AccountContainer","Wrapper","Data","NameAccount","UpdateData","OrderTitle","UpdateInfo","item","handleClick","id","userData","useSelector","state","login","shippingData","shipping","navigate","useNavigate","data","name","lastname","email","myShipping","yourData","result","myData","address","height","city","areacode","phone","routes","map","clientId"],"sourceRoot":""}