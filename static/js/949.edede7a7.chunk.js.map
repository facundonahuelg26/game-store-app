{"version":3,"file":"static/js/949.edede7a7.chunk.js","mappings":"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","sources":["pages/shipping/CreateShipping.js","pages/shipping/helpers/index.js","pages/shipping/validations/index.js"],"sourcesContent":["import React from 'react'\r\nimport { Formik, Form } from \"formik\";\r\nimport { Wrapper,Container, Errors} from '../../styled-components';\r\nimport { shippingSchema } from './validations';\r\nimport { routes } from '../../router';\r\nimport { createService } from '../../service';\r\nimport { useSelector } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { dataHelper } from './helpers';\r\nimport { usePreventSubmit } from '../../hooks';\r\nimport {TitleAndLinkOne, FieldFormInput, LinkTwoForm, ButtonForm, SelectField } from \"../../components/form\";\r\nimport { useErrorTime } from '../../hooks/useErrorTime';\r\n\r\nconst CreateShippingPage = () => {\r\n  const { userData } = useSelector((state) => state.login);\r\n  const {userId} = userData.data\r\n  const [send, setSend] = React.useState(false)\r\n  const [success, setSuccess] = React.useState(false)\r\n  const handleKeyDown = usePreventSubmit()\r\n  const {textError, setTextError} = useErrorTime()\r\n  const [dataState, setDataState] = React.useState([])\r\n  const [dataCity, setDataCity] = React.useState([])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Wrapper marginTop='30px'>\r\n          <TitleAndLinkOne title='Datos de envio'\r\n            route={routes.home} myText={'Ir al Inicio'}\r\n            condition={send} />\r\n          <Formik\r\n            initialValues={{\r\n              address: \"\",\r\n              height: \"\",\r\n              state: \"\",\r\n              city: \"\",\r\n              areacode:\"\",\r\n              phone:\"\"\r\n            }}\r\n            validationSchema={shippingSchema}\r\n            onSubmit={async (myvalues, { resetForm }) => {\r\n              let myItem = dataState.filter(item => item.id === myvalues.state && item)\r\n              let prov = myItem.reduce(el => el)\r\n              let mySecondItem = dataCity.filter(item => item.id === myvalues.city && item)\r\n              let ciu = mySecondItem.reduce(el => el)\r\n              resetForm();\r\n              try {\r\n                let value = {\r\n                  address:myvalues.address,\r\n                  height:myvalues.height,\r\n                  state:prov.nombre,\r\n                  city:ciu.nombre,\r\n                  areacode:myvalues.areacode,\r\n                  phone:myvalues.phone,\r\n                  userData:userId \r\n                }\r\n                setSend(true)\r\n                const dataReceived = await createService(value, 'user-info');\r\n                if (dataReceived.statuscode === 201) {\r\n                  console.log(\"success shipping\", dataReceived);\r\n                  setSuccess(true)\r\n                } else {\r\n                  setSend(false)\r\n                  throw dataReceived\r\n                }\r\n                \r\n              } catch (err) {\r\n                console.log(err.errorcode, err.message);\r\n                setTextError(err.message)\r\n              }\r\n            }}\r\n          >\r\n            {({ handleSubmit }) => (\r\n              <Form onSubmit={handleSubmit} onKeyDown={handleKeyDown}>\r\n                {dataHelper.map(item => (\r\n                  <FieldFormInput key={item.id} item={item} condition={send} />\r\n                ))}\r\n                <SelectField setDataState={setDataState} dataState={dataState} \r\n                  route='provincias'\r\n                  dataCity={dataCity} setDataCity={setDataCity} /> \r\n                <ButtonForm condition={send} myText={'Siguiente'} />\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n          <LinkTwoForm condition={send} myText='Volver a mi cuenta' route={routes.account} />\r\n        </Wrapper>\r\n          {success && <Navigate to={routes.account}/>}        \r\n        {textError !== '' && <Errors>{textError}</Errors>}\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateShippingPage;\r\n","export const dataHelper = [\r\n  {\r\n    id:1,\r\n    name: \"address\",\r\n    type: \"text\",\r\n    placeholder: \"Calle\",\r\n  },\r\n  {\r\n    id:2,\r\n    name: \"height\",\r\n    type: \"text\",\r\n    placeholder: \"Altura\",\r\n  },\r\n  {\r\n    id:3,\r\n    name: \"areacode\",\r\n    type: \"text\",\r\n    placeholder: \"Código de Área\",\r\n  },\r\n  {\r\n    id:4,\r\n    name: \"phone\",\r\n    type: \"text\",\r\n    placeholder: \"Télefono\",\r\n  },\r\n];\r\n\r\n\r\nexport const dataAddress = [\r\n  {\r\n    id:1,\r\n    name: \"address\",\r\n    type: \"text\",\r\n    placeholder: \"Calle\",\r\n  },\r\n  {\r\n    id:2,\r\n    name: \"height\",\r\n    type: \"text\",\r\n    placeholder: \"Altura\",\r\n  },\r\n]\r\n\r\nexport const dataPhone = [\r\n  {\r\n    id:3,\r\n    name: \"areacode\",\r\n    type: \"text\",\r\n    placeholder: \"Código de Área\",\r\n  },\r\n  {\r\n    id:4,\r\n    name: \"phone\",\r\n    type: \"text\",\r\n    placeholder: \"Télefono\",\r\n  },\r\n]","import * as Yup from \"yup\";\r\n\r\nexport const shippingSchema = Yup.object().shape({\r\n    address: Yup.string()\r\n      .required(\"La calle es requerida\")\r\n      .min(3, 'La calle debe tener mas de 2 caracteres')\r\n      .max(16, 'La calle debe tener menos de 16 caracteres')\r\n      .matches(/^[a-zA-ZÀ-ÿ\\s]{1,40}$/,' Letras y espacios, puede llevar acentos')\r\n      .trim(),\r\n    height: Yup.string()\r\n      .required(\"La altura es requerida\")\r\n      .matches(/^\\d{4,6}$/,'Entre 4 y 6 números')\r\n      .trim(),\r\n    state: Yup.string()\r\n    .required(\"La provincia es requerida\")\r\n    .trim(),\r\n    city: Yup.string()\r\n    .required(\"La ciudad es requerida\")\r\n    .trim(),\r\n    areacode: Yup.string()\r\n    .required(\"El código de área es requerido\")\r\n    .matches(/^\\d{4,6}$/,'Entre 4 y 6 números')\r\n    .trim(),\r\n    phone: Yup.string()\r\n    .required(\"El teléfono es requerido\")\r\n    .matches(/^\\d{6,14}$/,'Entre 6 y 14 números')\r\n    .trim(),\r\n  });"],"names":["userId","useSelector","state","login","userData","data","React","send","setSend","success","setSuccess","handleKeyDown","usePreventSubmit","useErrorTime","textError","setTextError","dataState","setDataState","dataCity","setDataCity","marginTop","title","route","routes","myText","condition","initialValues","address","height","city","areacode","phone","validationSchema","shippingSchema","onSubmit","myvalues","resetForm","myItem","filter","item","id","prov","reduce","el","mySecondItem","ciu","value","nombre","createService","dataReceived","statuscode","console","log","errorcode","message","handleSubmit","onKeyDown","dataHelper","to","name","type","placeholder","dataAddress","dataPhone","Yup","shape","required","min","max","matches","trim"],"sourceRoot":""}